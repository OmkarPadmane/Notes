Linux is a family of open-source operating systems based on the Linux kernel, developed by Linus Torvalds.
It's widely used on various devices, from servers and supercomputers to smartphones and embedded systems,
and is known for its flexibility, security, and customization options. 

- Linux architectue:
	Application
	Shell
	Kernel
	Hardware


- What is a Shell: 
 - The shell is a command-line interface that allows the user to enter commands to interact with the operating system. 
 - It acts as an intermediary between the user and the kernel, interpreting commands entered by the user and
   translating them into instructions that the kernel can execute.  Ex. BASH

- What is Kernel:
 - The kernel is the core component of the operating system that manages system resources and provides services to other programs running on the system.
 - It acts as a bridge between the user and the resources of the system.
 - It is responsible for tasks such as memory management, process scheduling, and device drivers. 

Absolute path is defined as specifying the location of a file or directory from the root directory(/).   ex.   /home/osbpxes/Download
Relative path is defined as the path related to the present working directly.(because we are already in /home/osbpxes)  ex.   /download

- Package Manager: It is tool for installation, updating, rollback and removal of software/services in Linux distributions.

DEB: Debian Package
- Used by Debian, Ubuntu, Linux Mint, and other Debian-based distributions. 

apt: Advanced Packaging Tool
- A higher-level tool that handles dependencies and interacts with software repositories.	
- apt relies on software repositories listed in /etc/apt/sources.list and files within /etc/apt/sources.list.d/. 
  These files tell apt where to find software packages.

deb vs apt:
 deb is the package format used by Debian-based systems to distribute software. 
 apt works on top of dpkg to provide a more user-friendly and efficient way to manage software.

RPM: RedHat Package Manager
- RPM packages contain compiled software, metadata (like dependencies and version information), and installation scripts. 
- rpm is a command-line tool that can install packages, but it doesn't automatically resolve dependencies.
- yum and dnf solve this by fetching and installing required dependencies from repositories.

yum: Yellowdog Updater, Modified
- yum and dnf relies on software repositories defined in .repo files usually located in /etc/yum.repos.d/ for handling dependencies automatically. 
  These files tell yum where to find software packages.


dnf: Dandified YUM
- DNF is a software package manager that installs, updates, and removes packages on Red Hat Linux and is the successor to YUM .
- DNF makes it easy to maintain packages by automatically checking for dependencies and determines the actions required to install packages.

diff update vs upgrade
- update: Updates the local package list, fetching the latest information from the repositories. 
  It's crucial to run this before installing or upgrading packages.
- update will keep old packages , and install updated packages which helps in rollback.
- upgrade: Upgrades all upgradable packages to their latest versions.
- upgrade will delete old packages.

yum vs dnf:
yum uses its own dependency resolution algorithm, which can sometimes be slower and less accurate.
dnf is aiming to address yum's limitations and provide a better user experience.

sudo: super user do
1) Ls : Lists Directory

$ ls -l, ls -ltr [l= long list, t= Sort files time, r= reverse]

ex : drwxr-xr-x 2 osboxes osboxes 4096 Apr 22  2022 Desktop

– normal file
d : directory
s : socket file
l : link file
c : CHaracter special file
b : Binary file

Field 1 – File Permissions
Field 2 – Number of links: the number of links for that file. In this example, 2 indicates link to this file.
Field 3 – Owner of the file. this file is owned by username ‘osboxes’.
Field 4 – Group: this file belongs to "osboxes" group.
Field 5 – Size of file in bytes. 
Field 6 – Last modified date and time
Field 7 – File name: The last field is the name of the file.

ls -a : shows all files along with hidden files.
ls -i : shows file inode no

2) pwd :Present Working Directory 

 Displays the full pathname of the current directory	
	
3) cd : Change Directory

options:

$ cd [directory_name]
$ cd ..    		:go one dir back
$ cd / cd ~   		:go to home dir
$ cd -    		:go to privious dir
$ cd 'hi by' 		:to change dir with space in name

4) sudo su: go to the superuser/root user

5) sudo [cmd]   :  sudo rm
 lets you excute cmd as root

6) to save cmd o/p in file

# stdout: cmd 1> filename    if cmd is wrong then it will not save o/p  ex. pwd > p1.txt
# stderr: cmd 2> filename    if cmd is right then it will not save o/p   ex. pwd 2> p1.txt
# for both : cmd &> filename    cmd right/wrong it will save o/p        ex.  pwd &> p1.txt

7) make directory 
$ mkdir dir_name
$ mkdir dir_name1  dir_name2    : make multiple dir
$ mkdir -p dir_name/dir_name        : make dir in dir  parent-child
$ mkdir "hi by"   : make dir with space in name  & cd 'hi by' to change dir
 

8) cat : Concatenation
 use to view, concatenate, create, copy, merge, and manipulate file contents.

$ cat file_name    			: View the Content of a Single File
$ cat file_name1 file_name2    		: View the Content of a multiple Files
$ cat -n file_name     			: Shows line number with data
$ cat > newfile_name  			: Create a file and add content
$ cat file1.txt > file2.txt    		: Copy content of file1 into file2
$ cat file_name1 >> file_name2    	: Append the Contents of One File to the End of Another File
$ tac file_name1   			: ‘tac’ command is the reverse of ‘cat’ and display the content of a file in revers


9) whoami : Display the current username  ,
   who : displays information about users who are currently logged into the system   
   which: helps users locate the executable file associated with a given command including binaries, scripts, and aliases
   hostname : displays hostname, is a human-readable label or name assigned to a device connected to a network.

10) grep : Global Regular Expression Print
 - used for searching and manipulating text patterns within files.
syntax : grep [options] pattern [files]

ex . grep -c an anime.txt   (for string)
     ls | grep .txt  (for extension)

-c : This prints only a count of the lines that match a pattern
–i : Ignores, case for matching
-n : Display the matched lines and their line numbers.
-v : This prints out all the lines that do not matches the pattern
-o : Print only the matched parts of a matching line

grep -n ^s anime.txt :  Matching the Lines that Start with a String.
grep -ni s$ anime.txt : Matching the Lines that End with a String 



11) sort : SORT command is used to sort a file either alphabetically or numerically, arranging the records in a particular order.

sort -r example.txt

-r : Sorts data in reverse order (descending).

-u : Sorts and removes duplicate lines, providing a unique sorted list.

-n : Sorts a file numerically.

-k : Sorts a table based on a specific column number.

12) cp : copy files/dir
syntax : cp source_file destination
ex. : cp anime.txt /home/osboxes/Documents/
      cp -r hi /home/osboxes/Documents/
      cp *.txt /home/osboxex/hi/    (copy all .txt files)

-r or -R : Copies directory structure recursively.    
-i : Interactive copying with a warning before overwriting file.
-n : Does not overwrite the file

13) mv : move files / dir  or change name of file/dir
move:
syntax : mv source_file/dir  destination
ex. mv  hi /home/osboxes/Documents/

rename:
syntax : mv filename new_filename 
ex. : mv b.txt by.txt

14) mkdir : make dir/folder
mkdir ab  
mkdir -p q/w/e/r  make dir in dir
mkdir p{1..10}  make multiple dir  

15) rm : remove/delete
rm dir_name/filename  
rm -r om/     -r for to delete non empty dir

rmdir : deletes only empty dir

rmdir -p q/w/e/   : -p delete dir with all data
rmdir -v p{1..10}


16) uname : used to display the krnel name

17) file system (hdd,ssd)

inode: store information about files and directories, such as file ownership, access mode and file type,
	which is identified by an integer known as “inode number”. 
	
- du : used to display disk consumption of a specific directory
- df -Th : displays information about the disk space usage on a file system
	T: file system type , h: human redable
- cat /etc/fstab : File System Table, is a configuration file in Linux that controls how file systems are mounted and unmounted.
- lsblk: List Block, it is used to list out all block devices in a tree-like format
	Block device in Linux is a piece of hardware that stores data in fixed-size blocks

RAM:
- free: used to check the amount of free and used memory 

top: displays info of RAM, CPU and process of system. It helps in monitoring system usage and performances.
 
18)  wc : word count of file
$ wc b.txt 
o/p : 2  2 14 b.txt     (number of lines, words, bytes, file_name)

19) chmod : used to change the permissions of a file
syntax : chmod [options] [mode] [File_name] 
ex. : chmod u=rwx,g=rw,o=r anime.txt 

-R : Apply the permission change recursively to all the files and directories within the specified directory.
-h : Change the permissions of symbolic links instead of the files they point to.

+ : Add permissions |  - : Remove permissions |  = : Set the permissions to the specified values

r(4) : Read permission | w(2) : Write permission  |  x(1) : Execute permission

u : Owner |  g : Group  |  o : Others  |  a : All (owner, groups, others)

20) chown : change owner
syntax : chown [options] new_owner[:new_group] file(s)
ex. : chown master file1.txt     and     chown master:group1 file1.txt

-c/-v : receive notifications about ownership alterations.
-f : forcefully or silently change ownership

21) install cmd : 

syntax : sudo yum install package-name
 
yum : Yellow Dog Updater, Modified  | fro REHL , centos
apt : Advanced Packaging Tool  | for Debian, ubuntu
dnf : Dandified YUM | fro fedora , Rocky Linux

22) update : used to synchronize package lists from repositories and update information about available packages.

23) bashrc : bash read command
 configuration file for the Bash shell environment.  

24) tar 
tar [options] [tar-file-name] [file or directory to be tar]
ex. tar -czvf anime.tar anime.txt (compress)
    tar -xzvf anime.tar (extract)

-c : Creates an archive by bundling files and directories together.

-x : Extracts files and directories from an existing archive.

-z : Uses gzip compression when creating a tar file, resulting in a compressed archive with the ‘.tar.gz’ extension.

-v : Displays verbose information

25) head : shows first 10 lines |  head filename or head -n 3 fname  (first 3 lines)

25) tail : shows last 10 lines |  tail filename  or tail -n 5 fname (last 5 lines)
	tail -f : allows a file to be monitored. checking logs, -f : follow

26) tty : terminal id

27) cat /etc/os-release :  displays information about your operating system, including the distribution name, version, and ID. 

28) echo "string" :  echo is cmd that outputs the string that are passed to it as arguments. 

29) cmd used to create file : touch, vi, vim, nano
    
    cmd used to view file  :   less, more, cat

30) how to search string in file :  grep string file     or     less filename  (enter  after that /string )  

31) egrep 

32) ip addr , ifconfig   : check ip address

33) find , locate : for finding files

34) diff : finde difference two files

35) shred :  permenantely delete file so that we can not recover it

36) lscpu and dmidecode  : check system architecture info

37) file : to finde file type , ex. file fname    , stat filename  : shoes statistics

38) cmd > fname : writes the output of cmd into file  ,ex. ls -l > ls.txt
	or
   tee :  writes the output of cmd into file and on screen
	ls -l | tee ls.txt

39) 2> : to redirect error into file  ,  &1 : to redirecct output into file  , &12>  : both output and error into file
     cd /root 2> error.txt      ,      cd / &1> out.txt       ,   cd / &12> erou.txt

40) crontab and at : used to allow users to schedule tasks or commands that help to run automatically at specified times and intervals.
	* * * * * cmd  ,  min hour dom mon week cmd
     crontab -e : used to edit crontab
     crontab -l : use to view crontab entries
     crontab -r : use to remove current crontab file
     crontab -i : showes prompt before removing a user's crontab

41) echo $0 : tells in which shell we are in
42) /home/uername : location of home directory of a user 
43) free : displays how much RAM is used and how much is available

44) dhclient : it give dynamic ip 
45) nmcli   : used to setup static ip
46) epel-release   :   Extra Packages for Enterprise Linux

47) apt remove   :  removes package
48) apt --auto-remove  :  removes package and all its dependencies from system
	ex.  $ sudo apt purge --auto-remove ansible

49) apt-get clean  :  The command sudo apt-get clean removes downloaded package files from the local repository, 
freeing up disk space. It removes everything from /var/cache/apt/archives/ except for the lock file and partials folder.
	ex.    sudo apt clean

50) User management
id: Print user and group information for each specified USER
useradd uname  or adduser uname : create user  
passwd uname : set password

sudo usermod -aG sudo username : Add user to the sudoers file
useradd -u uid -G gid uname : create user with specific uid ,add it to specific group

usermod -a -G gname uname :  add user in specific group

groupadd gname : create group
groups uname : showes group names in ehich user is present
gpaswd uname gname:  add user in group
gpasswd -d uname gname : remove user from group
gpasswd -M uname,uname gname : add multiple user to group

51) awk: is a scripting language used for text processing and for data extraction 
	scans a file line by line.
 	uses regular expressions for text processing

-F : for the input field separator ,declaring separator in between [], '', ""

ex. awk -F ',' '{print $1, $2}' marks

$NF: represents the last field in a record
ex. awk -F [,] '{print $NF}' marks

NR: used to print line no 
ex. awk '{print NR, $0}' name

print specific line
awk -F ',' 'NR=="3" {print}' m

print lines between 3 to 5
awk -F ',' 'NR=="3", NR=="5" {print}' m

print blank line no
awk 'NF==0 {print NR}' m

print total line no
awk 'END { print NR }' m

to sort data based on condition
ex. awk -F ',' '{if ($2 > 80) print}' marks

to change value
awk -F ',' '{if ($1=="John"){$2==80} print}' marks 

/patter/ : to use regular expressions  
ex. awk -F ',' '/John/ {print}' m

for loop
awk 'BEGIN {for(i=0;i<=10;i++) print i;}' 

addition of column
awk -F ',' '{sum += $2}END {print sum}' marks

regular expressions 

^	Indicates the beginning of the line
$	Indicates the end of a line
.	Matches any character
[ad]	Selects a or d
[a-d]	Selects any character a through d (a, b, c, or d)
[^a-d]	Selects any character except a through d (e, f, g, h…)

awk '/.f/ {print }' name
awk '/^l/ {print}' name
awk '/k$/ {print }' name 

52) netstat : network statistics
  - is a networking tool used for troubleshooting, configuration and as a monitoring tool for connections over the network. 
Both incoming and outgoing connections, routing tables, port listening, and usage statistics are common uses for this command.

 netstat -a
  t-tcp , u-udp, n- numerical address, l-listen , p-PID/Program name for sockets, r-rounting table
  i-interface, s- statistics

  
53) Process Management:
Process is a running instance of a program.
ps : process status
 - List all ruining processes

nohup : no hang up
 - It allows you to run a command or shell script in such a way that it continues to run even after you log out or close the terminal. 
 - It is used managing tasks that take long time to complete.  ex. data backups
 - It creates nohup.out file which stores output of the process in current dir.
	ex. nohup bash geekfile.sh

jobs: Jobs command is used to list the jobs that you are running or stopped.

bg: bg is a process control command that resumes suspended process while keeping them running in the background.
	bg %job-id, bg %2
fg Command : fg command moves a background job in the current shell environment into the foreground.
	fg %job-id,  fg %4


54) Log file:
what is log : 
- Log are records that stores events, processes, messages from applications, operating systems, or devices.in system
- Log files helps to identify problems, troubleshoot when encountering an error by providing a detailed record of what has happened within a system. 

syslog configuration file: /etc/rsyslog.conf
Log dir: /var/log

log files: 

- boot: A boot log is a record of all the events that occur when a computer or server starts up.
- cron: Cron logs are records of scheduled tasks that are executed by the crontab  
- secure: Security logs contain events related to security, such as login attempts, object access, and file deletion
- maillog: Mail logs are records of email data, including the sender and recipient details, timestamps, and any errors that occur. 
- httpd: HTTP logs are records of requests and responses made to an HTTP server
- message: Message logs is text files that record a system's operations

- journalctl: command is part of the systemd suite of utilities and is used to query and display log messages from the systemd journal. 
  - The systemd journal is a centralized logging system that collects and stores log data from various sources, 
  including system services, kernel events, and user applications.

- software suite: is a collection of computer programs that work together to solve a variety of tasks and applications. ex. systemd

- Systemd: is a system and service manager for Linux operating systems. 
   It's essentially the software that manages how your system starts up, what services are running.
 - It is uesd to Start/Stop, Check status and Enable/Disable services.
 - Enable/Disable a service to start at boot.
	ex. sudo systemctl start <service_name>

55) link : Use to create shotcut for accessing files/dir.

- Hard Links: creates a new file that points directly to the same inode (index node) as the original file.
   - can have multiple hard links, cannot create hard links to directories, if original file moved or deleted will not affect link
   - Changes made to file through any links will be reflected in all other hard links because they all point to the same data.
	ex.  ln a/b/c/d/hl.txt h1.txt

- Symbolic Links (Soft Links):
   - It's points to the target file or directory.
   - If target file or directory is moved or deleted or renamed, link will not work.
   - can create links to directories
	ex.  ln -s a/b/c/sl.txt s1.txt

56) shoutdown : turn off the system,  reboot: restart the system




